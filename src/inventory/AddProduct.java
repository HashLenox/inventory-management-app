package javaa;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.Character.UnicodeBlock.forName;
import static java.lang.Class.forName;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.design.*;
import net.sf.jasperreports.engine.xml.*;
import net.sf.jasperreports.view.*;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author Hashini Lenox
 */
public class AddProduct extends javax.swing.JFrame {

    private static final String usename = "root";
    private static final String Password = "";
    private static final String dataConn = "jdbc:mysql://localhost:3306/java";
    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int q, i, id, deleteItem;

    public AddProduct() {
        initComponents();
        populateSupplierComboBox();
        upDateDB();
        quantityAlert();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void upDateDB() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/java";
            java.sql.Connection conn = DriverManager.getConnection(url, "root", "");
            sqlConn = DriverManager.getConnection(dataConn, usename, Password);
            pst = sqlConn.prepareStatement("select * from product");

            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            q = stData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel) jTable2.getModel();
            RecordTable.setRowCount(0);
            while (rs.next()) {
                Vector columnData = new Vector();
                for (i = 1; i <= q; i++) {
                    columnData.add(rs.getString("ProductID"));
                    columnData.add(rs.getString("ProductName"));
                    columnData.add(rs.getInt("Quntity"));
                    columnData.add(rs.getString("ProductCatgory"));
                    columnData.add(rs.getBigDecimal("Price"));
                    columnData.add(rs.getString("suppliername"));

                }
                RecordTable.addRow(columnData);
            }
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(null, ex);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        dele = new javax.swing.JButton();
        res = new javax.swing.JButton();
        lg = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        usen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        psw = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        nam1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        usen22 = new javax.swing.JTextField();
        nm = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        gg = new javax.swing.JComboBox<>();
        ee = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lg1 = new javax.swing.JButton();
        jprint = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Item Specifications");

        add.setText("ADD Product");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        edit.setText("UPDATE");
        edit.setActionCommand("UPDATE USER");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        dele.setText("DELETE");
        dele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleActionPerformed(evt);
            }
        });

        res.setText("RESET");
        res.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resActionPerformed(evt);
            }
        });

        lg.setText("Users");
        lg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Product ID");

        usen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usenActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Quntity");

        psw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pswActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Price");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Product Catgory");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Quntity", "Product Catgory", "Price", "Supplier Name"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        nam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nam1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Product Name");

        usen22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usen22ActionPerformed(evt);
            }
        });

        nm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Home & Garden", "Clothing", "Food", "Electronic" }));
        nm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nmActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Supplier Name");

        gg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ggActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lg1.setText("CHECK  PRODUCT  DETIALS");
        lg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lg1ActionPerformed(evt);
            }
        });

        jprint.setText("Download Report");
        jprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jprintActionPerformed(evt);
            }
        });

        jButton4.setText("ADD SUPPLIER");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("ADD PRODUCTS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("ORDER DETAILES");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setForeground(new java.awt.Color(255, 0, 0));
        jButton7.setText("LOGOUT");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel8.setText("Search by Name");

        jButton8.setText("Dashboard");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usen)
                                    .addComponent(usen22)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(psw)
                                    .addComponent(nm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel4))
                                        .addGap(34, 34, 34))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lg1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jprint, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(nam1)
                                    .addComponent(gg, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ee, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1)
                                        .addGap(34, 34, 34)
                                        .addComponent(jButton2)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(res, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dele, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(res, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(dele, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(usen22, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel2))
                                                    .addGap(12, 12, 12)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(usen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel6)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(3, 3, 3)
                                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(psw, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3)
                                                .addComponent(lg, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(nm, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel5))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(nam1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(gg, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(33, 33, 33)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lg1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jprint, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(173, 173, 173)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(276, 276, 276)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ee, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void populateSupplierComboBox() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/java";
            java.sql.Connection conn = DriverManager.getConnection(url, "root", "");
            sqlConn = DriverManager.getConnection(dataConn, usename, Password);
            pst = sqlConn.prepareStatement("SELECT name FROM supplier");

            rs = pst.executeQuery();
            gg.removeAllItems(); // Clear existing items
            while (rs.next()) {
                String supplierName = rs.getString("name");
                gg.addItem(supplierName);
            }
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(null, ex);
        }
    }
    private void usenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usenActionPerformed

    private void pswActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pswActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pswActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        String selectedSupplier = gg.getSelectedItem().toString();
        String role = nm.getSelectedItem().toString();

        try {
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/java";
            Connection conn = DriverManager.getConnection(url, "root", "");

            String checkSql = "SELECT * FROM product WHERE ProductID = ?";
            try (PreparedStatement checkStmt = conn.prepareStatement(checkSql)) {
                String userIdText = usen22.getText();
                if (userIdText.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid Product ID", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                int userId = Integer.parseInt(userIdText);
                checkStmt.setInt(1, userId);

                try (ResultSet checkResult = checkStmt.executeQuery()) {
                    if (checkResult.next()) {

                        pst = conn.prepareStatement("UPDATE product SET ProductName=?, Quntity=?, ProductCatgory=?, Price=?,suppliername=? WHERE ProductID=?");

                        pst.setString(1, usen.getText());
                        pst.setInt(2, Integer.parseInt(psw.getText()));
                        pst.setString(3, role);
                        pst.setBigDecimal(4, new BigDecimal(nam1.getText()));
                        pst.setString(5, selectedSupplier);
                        pst.setInt(6, userId);

                        int rowsUpdated = pst.executeUpdate();

                        if (rowsUpdated > 0) {
                            JOptionPane.showMessageDialog(this, "Product Edited Successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                            upDateDB();
                        } else {
                            JOptionPane.showMessageDialog(this, "No changes made. Make sure the values are different.", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Can't find the Product.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Product ID format", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editActionPerformed
    private JFrame frame;
    private void lgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgActionPerformed
        admin ui = new admin();
        ui.show();
        dispose();

    }//GEN-LAST:event_lgActionPerformed

    private void resActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resActionPerformed
        usen22.setText("");
        usen.setText("");
        psw.setText("");
        nam1.setText("");
        nm.setSelectedItem(null);
    }//GEN-LAST:event_resActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String selectedSupplier = gg.getSelectedItem().toString();
        int quantity;
        try {
            quantity = Integer.parseInt(psw.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Quantity format", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

// Check if quantity is less than 30
        if (quantity < 30) {
            JOptionPane.showMessageDialog(this, "Alert: Quantity is less than 30", "Alert", JOptionPane.WARNING_MESSAGE);
        }
        String role = nm.getSelectedItem().toString();

        try {
            if (usen22.getText().isEmpty() || usen.getText().isEmpty() || psw.getText().isEmpty()
                    || role.isEmpty() || nam1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/java";
            java.sql.Connection conn = DriverManager.getConnection(url, "root", "");
            sqlConn = DriverManager.getConnection(dataConn, usename, Password);

            if (isProductIDExists(usen22.getText())) {
                JOptionPane.showMessageDialog(this, "Product ID already exists", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            pst = sqlConn.prepareStatement("INSERT INTO product(ProductID, ProductName, Quntity, ProductCatgory, Price, suppliername) VALUES (?, ?, ?, ?, ?, ?)");

            String usenText = usen22.getText();
            int pswValue;
            try {
                pswValue = Integer.parseInt(psw.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid Quantity format", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            float nam1Value;
            try {
                nam1Value = Float.parseFloat(nam1.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid Price format", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            pst.setString(1, usenText);
            pst.setString(2, usen.getText());
            pst.setInt(3, pswValue);
            pst.setString(4, role);
            pst.setFloat(5, nam1Value);
            pst.setString(6, selectedSupplier);

            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Product Added");
                upDateDB();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add record", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean isProductIDExists(String productID) throws SQLException {
        String query = "SELECT COUNT(*) FROM product WHERE ProductID= ?";
        try (PreparedStatement checkProductIDStmt = sqlConn.prepareStatement(query)) {
            checkProductIDStmt.setString(1, productID);
            ResultSet resultSet = checkProductIDStmt.executeQuery();
            resultSet.next();
            int count = resultSet.getInt(1);
            return count > 0;
        }
    }//GEN-LAST:event_addActionPerformed
    public void quantityAlert() {
        try {
            int RefillValue = 30;
            ArrayList<String> ArrayListNotifiItem = new ArrayList<String>();
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
            }
            String url = "jdbc:mysql://localhost:3306/java";
            java.sql.Connection conn = DriverManager.getConnection(url, "root", "");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM product");

            float totalSum = 0;

            while (rs.next()) {
                String Productid = String.valueOf(rs.getString("ProductID"));
                String name = rs.getString("ProductName");
                String category = rs.getString("ProductCatgory");
                int quantity = rs.getInt("Quntity");
                float price = rs.getFloat("Price");

                totalSum += price;

                if (quantity < RefillValue) {
                    ArrayListNotifiItem.add(name);
                }
            }
            if (!ArrayListNotifiItem.isEmpty()) {
                String alert = ArrayListNotifiItem + "\nbelow " + RefillValue + "\nPlease refill";
                JOptionPane.showMessageDialog(this, alert, "Refill Alert", JOptionPane.INFORMATION_MESSAGE);
                ArrayListNotifiItem.clear();
            } else {
                JOptionPane.showMessageDialog(this, "There is nothing to refill", "Refill Alert", JOptionPane.INFORMATION_MESSAGE);
            }
//            System.out.println("Total Sum of Prices: " + totalSum);
        } catch (SQLException e) {
            System.out.println("Exception " + e);
        }
    }
    private void nam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nam1ActionPerformed

    }//GEN-LAST:event_nam1ActionPerformed

    private void usen22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usen22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usen22ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow != -1) {

            usen22.setText(jTable2.getValueAt(selectedRow, 0).toString());
            usen.setText(jTable2.getValueAt(selectedRow, 1).toString());
            psw.setText(jTable2.getValueAt(selectedRow, 2).toString());
            nm.setSelectedItem(jTable2.getValueAt(selectedRow, 3).toString());
            nam1.setText(jTable2.getValueAt(selectedRow, 4).toString());
            gg.setSelectedItem(jTable2.getValueAt(selectedRow, 5).toString());

        }
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
    }//GEN-LAST:event_jTable2MouseClicked

    private void deleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleActionPerformed
        try {
            String userIdText = usen22.getText();
            if (userIdText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter a valid Product ID", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int userId = Integer.parseInt(userIdText);
            int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this Product?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {

                try (PreparedStatement deleteStmt = sqlConn.prepareStatement("DELETE FROM product WHERE ProductID = ?")) {
                    deleteStmt.setInt(1, userId);
                    int rowsDeleted = deleteStmt.executeUpdate();

                    if (rowsDeleted > 0) {
                        JOptionPane.showMessageDialog(this, "Product Deleted Successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                        upDateDB();
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to delete Product.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Product ID format", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleActionPerformed

    private void nmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nmActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     String searchText = ee.getText();

String url = "jdbc:mysql://localhost:3306/java";
String username = "root";
String password = "";

try (Connection connection = DriverManager.getConnection(url, username, password)) {
    
    String sql = "SELECT * FROM product WHERE ProductName LIKE ? OR ProductCatgory LIKE ?";
    try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
        preparedStatement.setString(1, "%" + searchText + "%");
        preparedStatement.setString(2, "%" + searchText + "%");

        try (ResultSet resultSet = preparedStatement.executeQuery()) {
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.setRowCount(0); 

            while (resultSet.next()) {
                String productId = resultSet.getString("ProductID");
                String productName = resultSet.getString("ProductName");
                String quantity = resultSet.getString("Quntity");
                String productCategory = resultSet.getString("ProductCatgory");
                String price = resultSet.getString("Price");
                String supplierName = resultSet.getString("SupplierName");

               
                model.addRow(new Object[]{productId, productName, quantity, productCategory, price, supplierName});
            }
        }
    }
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error during database operation: " + e.getMessage());
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        upDateDB();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ggActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ggActionPerformed

    private void lg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lg1ActionPerformed
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;
        String url = "jdbc:mysql://localhost:3306/java";
        String username = "root";
        String password = "";

        try {
            Class.forName("com.mysql.jdbc.Driver");

            try (Connection connection = DriverManager.getConnection(url, username, password)) {
                String sql = "SELECT ProductID, ProductName, Quntity, ProductCatgory, Price FROM product";
                stmt = connection.prepareStatement(sql);
                rs = stmt.executeQuery();

                StringBuilder message = new StringBuilder("Inventory status report\n\n\n");

                while (rs.next()) {
                    String productName = rs.getString("ProductName");
                    int quantity = rs.getInt("Quntity");
                    String productCategory = rs.getString("ProductCatgory");
                    double price = rs.getDouble("Price");

                    double totalValue = price * quantity;

                    message.append("ProductName: ").append(productName).append("\n");
                    message.append("Quntity: ").append(quantity).append("\n");
                    message.append("ProductCatgory: ").append(productCategory).append("\n");
                    message.append("Price: ").append(price).append("\n");
                    message.append("Total Value: ").append(totalValue).append("\n");
                    message.append("\n");
                }

                JOptionPane.showMessageDialog(null, message.toString(), "Inventory status report", JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException e) {
                e.printStackTrace();
            }
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_lg1ActionPerformed

    private void jprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jprintActionPerformed

        try {
           
            Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/java";
            Connection conn = DriverManager.getConnection(url, "root", "");
            sqlConn = DriverManager.getConnection(dataConn, usename, Password);
          
            JasperDesign jdesign1 = JRXmlLoader.load("C:\\Users\\- AI -\\Documents\\NetBeansProjects\\JavaA\\src\\javaa\\report1.jrxml");
            String query1 = "SELECT ProductID, ProductName, Quntity, ProductCatgory, Price FROM product";

            JRDesignQuery updateQuery1 = new JRDesignQuery();
            updateQuery1.setText(query1);
            jdesign1.setQuery(updateQuery1);

            JasperReport jreport1 = JasperCompileManager.compileReport(jdesign1);
            JasperPrint jprint1 = JasperFillManager.fillReport(jreport1, null, sqlConn);
            JasperViewer.viewReport(jprint1);

     
            sqlConn.close();

        } catch (ClassNotFoundException | SQLException | JRException ex) {
            Logger.getLogger(AddProduct.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jprintActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
Supplier ui = new Supplier();
       ui.show();
       dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
AddProduct ui = new AddProduct();
       ui.show();
       dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
Order ui = new Order();
       ui.show();
       dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to logout?", "Logout Confirmation", JOptionPane.YES_NO_OPTION);
    
    if (result == JOptionPane.YES_OPTION) {
        Login ui = new Login();
        ui.setVisible(true);
        dispose();
    }  Login ui = new Login();
       ui.show();
       dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
Dashboard ui = new Dashboard();
       ui.show();
       dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    public static void main(String args[]) {
//        
        // Create and display the AddProduct form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddProduct().setVisible(true);
            }
        });
//        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton dele;
    private javax.swing.JButton edit;
    private javax.swing.JTextField ee;
    private javax.swing.JComboBox<String> gg;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jprint;
    private javax.swing.JButton lg;
    private javax.swing.JButton lg1;
    private javax.swing.JTextField nam1;
    private javax.swing.JComboBox<String> nm;
    private javax.swing.JTextField psw;
    private javax.swing.JButton res;
    private javax.swing.JTextField usen;
    private javax.swing.JTextField usen22;
    // End of variables declaration//GEN-END:variables
}
